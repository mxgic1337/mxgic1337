name: CI
on:
  push:
    branches:
      - 'main'

jobs:
  format-and-generate-readme:
    name: Format & generate README
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Format code
        run: |
          cargo fmt
          pnpm format
      - name: Commit formatting
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'style: formatted code'
      - name: Generate README
        run: pnpm readme:generate
      - name: Commit generated README
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'chore(README.md): updated README file'
  build:
    name: Build & Deploy
    needs: format-and-generate-readme
    environment:
      name: mxgic1337.xyz
      url: 'https://mxgic1337.xyz'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false 
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build website
        run: |
          mkdir -p dist/
          pnpm run less:build
          cargo build
          cp target/debug/mxgic1337 dist/
          cp -r public/ dist/
          cp -r templates/ dist/
      - name: Deploy
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd ~ && mkdir -p mxgic1337.xyz && cd ~/mxgic1337.xyz && ./kill.sh"
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./dist/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/mxgic1337.xyz
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd ~/mxgic1337.xyz && ./run.sh"
